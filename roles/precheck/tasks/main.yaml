- name: Initialize error count
  set_fact:
    error_count: 0
    error_msgs: []

- name: Fail if openshift is in project name
  block:
    - name: Increment error count
      set_fact:
        error_count: "{{ error_count | int + 1 }}"
    - name: Add error message
      set_fact:
        error_msgs: "{{ error_msgs + ['Error #' + error_count + ': DO NOT USE openshift in project name'] }}"
  when: "'openshift' in project_name"

- name: Create flatten node list
  ansible.builtin.set_fact:
    flattened_nodes: "{{ nodes | dict2items  | map(attribute='value') | flatten}}"

- name: Get list of duplicate IP addresses
  set_fact:
    all_ips: "{{ flattened_nodes | map(attribute='ip') | list }}"
    unique_ips: "{{ flattened_nodes | map(attribute='ip') | unique | list }}"

- name: Count identical ip adresses
  set_fact:
    ip_counter: "{{ all_ips|community.general.counter }}"

- name: Select identical ip adresses
  set_fact:
    duplicate_list: "{{ ip_counter|dict2items|selectattr('value', '>', 1)|map(attribute='key') }}"

- name: Fail if duplicate IP addresses are found
  block:
    - name: Increment error count
      set_fact:
        error_count: "{{ error_count | int + 1 }}"
    - name: Add error message
      set_fact:
        error_msgs: "{{ error_msgs + ['Error #' + error_count + ': Duplicate  IP addresses found in the nodes list =>' + duplicate_list  |join(', ') ] }}"
  when: duplicate_list | length > 0


- name: Gather flattened list of all nodes
  ansible.builtin.include_tasks: check-vm.yaml
  loop: "{{ flattened_nodes }}"

- name: "Error(s) found!"
  ansible.builtin.fail:
    msg: "{{ error_count }} error(s) found! \n{{ error_msgs | join('\n') | indent(4) }}"
  when: error_count | int > 0