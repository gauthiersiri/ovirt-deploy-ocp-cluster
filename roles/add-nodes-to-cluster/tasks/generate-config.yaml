# - name: Get MAC addresses for master VMs
#   environment:
#     KUBECONFIG: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"
#   command: "oc get vm -n {{ project_name }} {{ item.name }}.{{ config.cluster_name }}.{{ config.base_domain }} -o jsonpath='{.spec.template.spec.domain.devices.interfaces[0].macAddress}'"
#   register: master_mac_addresses
#   loop: "{{ masters }}"

- name: Get MAC addresses for worker VMs
  environment:
    KUBECONFIG: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"
  command: "oc get vm -n {{ project_name }} {{ item.name }}.{{ config.cluster_name }}.{{ config.base_domain }} -o jsonpath='{.spec.template.spec.domain.devices.interfaces[0].macAddress}'"
  register: worker_mac_addresses
  loop: "{{ workers }}"

- name: Get MAC addresses for infra VMs
  environment:
    KUBECONFIG: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"
  command: "oc get vm -n {{ project_name }} {{ item.name }}.{{ config.cluster_name }}.{{ config.base_domain }} -o jsonpath='{.spec.template.spec.domain.devices.interfaces[0].macAddress}'"
  register: infra_mac_addresses
  loop: "{{ infras }}"

- name: initialize macs array
  set_fact:
    # macs_master: "{{ macs_master | default([]) }}"
    macs_worker: "{{ macs_worker | default([]) }}"
    macs_infra: "{{ macs_infra | default([]) }}"

# - name: Build array with master mac_addresses
#   set_fact:
#     macs_master: "{{ macs_master + [ {'mac': item.stdout} ]}}"
#   loop: "{{ master_mac_addresses.results }}"

- name:  Build array with worker mac_addresses
  set_fact:
    macs_worker: "{{ macs_worker + [ {'mac': item.stdout} ]}}"
  loop: "{{ worker_mac_addresses.results }}"

- name:  Build array with infra mac_addresses
  set_fact:
    macs_infra : "{{ macs_infra + [ {'mac': item.stdout} ]}}"
  loop: "{{ infra_mac_addresses.results }}"

# - name: Update master dictionary with MAC addresses
#   set_fact:
#     masters: "{{ masters | zip(macs_master) | map('combine') | list }}"

- name: Update worker dictionary with MAC addresses
  set_fact:
    workers: "{{ workers | zip(macs_worker) | map('combine') | list }}"

- name: Update infra dictionary with MAC addresses
  set_fact:
    infras: "{{ infras | zip(macs_infra) | map('combine') | list }}"

# - name: Display updated master dictionary
#   debug:
#     var: masters

- name: Display updated worker dictionary
  debug:
    var: workers

- name: Display updated infra dictionary
  debug:
    var: infras

- name: Create node-config.yaml from template to install-dir
  template:
    src: "nodes-config.yaml.j2"
    dest: "{{ cluster_data_dir }}/install-dir/node-joiner/nodes-config.yaml"
    mode: '0664'
