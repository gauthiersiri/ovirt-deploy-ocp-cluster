- name: Create a k8s namespace
  kubernetes.core.k8s:
    name: "{{ project_name }}"
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"

# - name: Create a NetworkAttachmentDefinition
#   kubernetes.core.k8s:
#     state: present
#     template: network-attachment-definition.j2
#     kubeconfig: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"

- name: Delete PVC if already exist
  kubernetes.core.k8s:
    namespace: "{{ project_name }}"
    api_version: v1
    kind: pvc
    state: absent
    name: "{{ iso_pvc_name }}"
    kubeconfig: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"

- name: Create a PVC for the ISO 
  kubernetes.core.k8s:
    template: agent-iso-pvc.j2
    state: present
    kubeconfig: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"

- name: Create ODF PVCs for the ISO (worker / infra only)
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "{{ item.name }}-odf-osd-1"
        namespace: "{{ project_name }}"
      spec:
        accessModes:
          - ReadWriteMany
        volumeMode: Block
        storageClassName: "{{ ovirt.storage_class }}"
        resources:
          requests:
            storage: "{{ item.odf_disk_size }}Gi"
    state: present
    kubeconfig: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"
  loop: "{{ workers + infras }}"
  when: item.odf_disk_size is defined

- name: Create master VMs
  kubernetes.core.k8s:
    state: present
    template: 'ocp-node.j2'
    kubeconfig: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"
  loop: "{{ masters }}"

- name: Create worker VMs
  kubernetes.core.k8s:
    state: present
    template: 'ocp-node.j2'
    kubeconfig: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"
  loop: "{{ workers }}"

- name: Create infra VMs
  kubernetes.core.k8s:
    state: present
    template: 'ocp-node.j2'
    kubeconfig: "{{ cluster_data_dir }}/install-dir/ovirt-kubeconfig"
  loop: "{{ infras }}"
